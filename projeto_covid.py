# -*- coding: utf-8 -*-
"""projeto_covid.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cKGaKqFiJvVQrc6Utht3b7Dol48ZJgub

# **Introdução**
"""

import numpy as np
import pandas as pd 
import plotly.express as px
import matplotlib.pyplot as plt

covid = pd.read_csv('covid_sp_tratado.csv', sep=';', encoding='utf-8')
covid

covid_campinas = covid.loc[covid.municipio == 'Campinas']
covid_campinas

covid_campinas['porcentagem_idosos'] = 100 * covid_campinas['pop_60'] / covid_campinas['pop']
covid_campinas

covid_guarulhos = covid.loc[covid.municipio == 'Guarulhos']
covid_guarulhos

covid_guarulhos['porcentagem_idosos'] = 100 * covid_guarulhos['pop_60'] / covid_guarulhos['pop']
covid_guarulhos

"""# **Média**"""

media = covid_campinas['obitos_novos'].mean()
media

media2 = covid_campinas.casos_novos.mean()
media2

media3 = round(covid_guarulhos['obitos_novos'].mean(), 3)
media3

media4 = round(covid_guarulhos.casos_novos.mean(), 3)
media4

"""# **Mediana**"""

mediana = covid_campinas['obitos_novos'].median()
mediana

mediana2 = covid_campinas.casos_novos.median()
mediana2

mediana3 = covid_guarulhos['obitos_novos'].median()
mediana3

mediana4 = covid_guarulhos.casos_novos.median()
mediana4

"""# **Moda**"""

moda = covid_guarulhos['obitos_novos'].mode()
moda

moda2 = covid_guarulhos['dia'].mode()
moda2

moda3 = covid_campinas['dia'].mode()
moda3

moda4 = covid_campinas.mes.mode()
moda4

desc = round(covid_campinas.describe(), 1)
desc

coluna = covid_guarulhos['casos_novos'].describe()
coluna

covid_campinas2021 = covid_campinas.loc[covid_campinas.data > '2020-12-31']
covid_campinas2021

moda5 = covid_campinas2021.obitos_novos.mode()
moda5

med = covid_campinas2021.obitos_novos.median()
med

media5 = covid_campinas2021.obitos_novos.mean()
media5

"""# **Gráficos**"""

grafico = px.histogram(covid_campinas2021, x = "obitos_novos", nbins = 30)
grafico.update_layout(width=400, height=400, title_text= 'Óbitos Novos em Campinas - 2021')
grafico.show()

grafico = px.histogram(covid_campinas2021, x = "casos_novos", nbins = 30)
grafico.update_layout(width=400, height=400, title_text= 'Casos Novos em Campinas - 2021')
grafico.show()

grafico = px.histogram(covid_campinas, x = "casos_novos", nbins = 30)
grafico.update_layout(width=400, height=400, title_text= 'Casos Novos em Campinas')
grafico.show()

grafico = px.histogram(covid_guarulhos, x = "casos_novos", nbins = 30)
grafico.update_layout(width=400, height=400, title_text= 'Casos Novos em Campinas - 2021')
grafico.show()

"""# **Estatística**"""

# Valor mínimo
covid_campinas['obitos_novos'].min()

covid_campinas.casos_novos.min()

# Valor máximo
covid_guarulhos['obitos_novos'].max()

covid_campinas.obitos_novos.max()

covid_campinas['casos_novos'].max()

covid_guarulhos['casos_novos'].max()

#Primeiro Quartil
covid_campinas['casos_novos'].quantile(q=0.25)

#Segundo Quartil - Mediana
covid_campinas['casos_novos'].quantile(q=0.5)

#Terceiro Quartil
covid_campinas['casos_novos'].quantile(q=0.75)

#Quartil
covid_campinas['casos_novos'].quantile(q=0.99)

covid_campinas['casos_novos'].describe()

covid_guarulhos['casos_novos'].describe()

covid_guarulhos.obitos_novos.describe()

covid_campinas.obitos_novos.describe()

"""# **Gráfico BoxPlot e Outliers**"""

import plotly.express as px

grafico = px.box(covid_campinas, y='casos_novos')
grafico.show()

outlier_sup = covid_campinas.casos_novos.quantile(q=0.75) + 1.5 * (covid_campinas.casos_novos.quantile(q=0.75) - covid_campinas.casos_novos.quantile(q=0.25))
outlier_sup

outlier_inf = covid_campinas.casos_novos.quantile(q=0.25) - 1.5 * (covid_campinas.casos_novos.quantile(q=0.75) - covid_campinas.casos_novos.quantile(q=0.25))
outlier_inf

sem_outliers = covid_campinas.loc[covid_campinas.casos_novos <= outlier_sup]

sem_outliers.head()

grafico = px.box(sem_outliers, y='casos_novos')
grafico.show()

grafico = px.box(covid_guarulhos, y='casos_novos')
grafico.show()

outlier_sup2 = covid_guarulhos.casos_novos.quantile(q=0.75) + 1.5 * (covid_guarulhos.casos_novos.quantile(q=0.75) - covid_guarulhos.casos_novos.quantile(q=0.25))
outlier_sup2

outlier_inf2 = covid_guarulhos.casos_novos.quantile(q=0.25) - 1.5 * (covid_guarulhos.casos_novos.quantile(q=0.75) - covid_guarulhos.casos_novos.quantile(q=0.25))
outlier_inf2

sem_outliers2 = covid_guarulhos.loc[covid_guarulhos.casos_novos <= outlier_sup2]

sem_outliers2.head()

grafico = px.box(sem_outliers2, y='casos_novos')
grafico.show()

"""# **Medidas de dispersão**"""

# Variância de óbitos novos
covid_guarulhos['obitos_novos'].var()

covid_campinas['obitos_novos'].var()

# Variância de casos novos
covid_guarulhos.casos_novos.var()

covid_campinas.casos_novos.var()

# Desvio padrão de óbitos novos
covid_campinas.obitos_novos.std()

covid_guarulhos.obitos_novos.std()

# Desvio padrão de casos novos
covid_campinas.casos_novos.std()

covid_guarulhos.casos_novos.std()

covid_campinas.casos_novos.describe()

covid_guarulhos.casos_novos.describe()

"""# **Testes de Normalidade**

# Histograma
"""

import seaborn as sns

sns.histplot(covid_campinas, x='casos_novos', bins=20, color='orange', kde=True, stat='probability')

"""# QQPlot"""

import scipy.stats as stats
import matplotlib.pyplot as plt

stats.probplot(covid_campinas['casos_novos'], dist='norm', plot=plt)
plt.title('Análise Normalidade')
plt.show()

"""# Teste de Shapiro-Wilk"""

stats.shapiro(covid_campinas.casos_novos)

estatistica, p = stats.shapiro(covid_campinas.casos_novos)

print('Estatística do teste (W) =', round(estatistica,2))

print('p_valor =', p)

"""# Teste Lilliefors (Kolmogorov-Smirnov)"""

import statsmodels
from statsmodels.stats.diagnostic import lilliefors

estatistica, p = statsmodels.stats.diagnostic.lilliefors(covid_campinas.casos_novos, dist = 'norm',)
print('Estatística do teste (D) =', round(estatistica,2))

print('p_valor =', p)

"""# **Correlação Linear**

# Gráfico de Dispersão
"""

import matplotlib.pyplot as plt

plt.scatter(covid_campinas.casos, covid_campinas.obitos)
plt.title('Correlação Linear')
plt.xlabel('Casos')
plt.ylabel('Óbitos')
plt.grid(False)
plt.show()

df = covid_campinas[['casos', 'casos_novos', 'obitos', 'obitos_novos']]
df

stats.probplot(covid_campinas['casos'], dist='norm', plot=plt)
plt.title('Análise de Normalidade')
plt.show()

estatistica, p = stats.shapiro(covid_campinas.casos)

print(p)

"""# Correlação Linear"""

correlacoes = df.corr(method='spearman')
correlacoes

import seaborn as sns

plt.figure()
sns.heatmap(correlacoes, annot=True)

sns.pairplot(df)

"""# **Introdução à Regressão Linear Simples com Statsmodels**"""

import statsmodels.formula.api as smf
import statsmodels.stats.api as sms

regressao = smf.ols('obitos ~ casos', data= covid_campinas).fit()
print(regressao.summary())

coefs = pd.DataFrame(regressao.params)
coefs.columns = ['Coeficientes']
print(coefs)

plt.scatter(y=covid_campinas.obitos, x=covid_campinas.casos, color='blue', s=10, alpha=0.5)
X_plot = np.linspace(min(covid_campinas.casos), max(covid_campinas.casos), len(covid_campinas.obitos))
plt.plot(X_plot, X_plot*regressao.params[1] + regressao.params[0], color='r')
plt.title('Reta de Regressão')
plt.ylabel('Óbitos')
plt.xlabel('Casos')
plt.show()